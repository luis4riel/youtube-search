// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YoutubeSearch.Persistence;

#nullable disable

namespace YoutubeSearch.Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("YoutubeSearch.Domain.Models.ResourceId", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ChannelId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ETag")
                        .HasColumnType("TEXT");

                    b.Property<string>("Kind")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlaylistId")
                        .HasColumnType("TEXT");

                    b.Property<string>("VideoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ResourceIds");
                });

            modelBuilder.Entity("YoutubeSearch.Domain.Models.SearchResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ETag")
                        .HasColumnType("TEXT");

                    b.Property<string>("Kind")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ResourceIdId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("SnippetId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ResourceIdId");

                    b.HasIndex("SnippetId");

                    b.ToTable("SearchResults");
                });

            modelBuilder.Entity("YoutubeSearch.Domain.Models.Snippet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ChannelId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ChannelTitle")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ETag")
                        .HasColumnType("TEXT");

                    b.Property<string>("LiveBroadcastContent")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("PublishedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("PublishedAtRaw")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Snippets");
                });

            modelBuilder.Entity("YoutubeSearch.Domain.Models.SearchResult", b =>
                {
                    b.HasOne("YoutubeSearch.Domain.Models.ResourceId", "ResourceId")
                        .WithMany()
                        .HasForeignKey("ResourceIdId");

                    b.HasOne("YoutubeSearch.Domain.Models.Snippet", "Snippet")
                        .WithMany()
                        .HasForeignKey("SnippetId");

                    b.Navigation("ResourceId");

                    b.Navigation("Snippet");
                });
#pragma warning restore 612, 618
        }
    }
}
